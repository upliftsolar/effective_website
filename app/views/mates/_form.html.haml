= effective_form_with model: [(namespace ||= nil), mate].compact do |f|
  - if inline_datatable? && f.object.community_id.present?
    = f.hidden_field :community_id
    = f.static_field :community
  - elsif namespace == :admin
    = f.select :community_id, Community.sorted.where.not(id: f.object.user&.communities)
  - else
    = f.select :community_id, Community.sorted.for_user(current_user).where.not(id: f.object.user&.communities)

  - if inline_datatable? && f.object.user_id.present?
    = f.hidden_field :user_id
    = f.static_field :user
  - elsif namespace == :admin
    = f.select_or_text :user_id, :email, User.sorted.where.not(id: f.object.community&.users), select: { template: :html }
  - else
    = f.email_field :email, label: 'Invite email'

  - if namespace == :admin || current_user.community_ids.include?(f.object.community_id || 0)
    - current_mate = current_user.mates.find { |mate| mate.community_id == f.object.community_id }
    = f.radios :roles, EffectiveRoles.roles_collection(f.object, current_mate || current_user, only: Mate::ROLES),
      label: false, selected: (f.object.roles.presence || :member)

  = effective_submit(f)
